"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/(app)/chat/[sessionId]/page",{

/***/ "(app-pages-browser)/./lib/socket.ts":
/*!***********************!*\
  !*** ./lib/socket.ts ***!
  \***********************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   disconnectSocket: function() { return /* binding */ disconnectSocket; },\n/* harmony export */   initializeSocket: function() { return /* binding */ initializeSocket; },\n/* harmony export */   joinChatSession: function() { return /* binding */ joinChatSession; },\n/* harmony export */   leaveChatSession: function() { return /* binding */ leaveChatSession; },\n/* harmony export */   onMessageReceived: function() { return /* binding */ onMessageReceived; },\n/* harmony export */   onTypingStatus: function() { return /* binding */ onTypingStatus; },\n/* harmony export */   removeListeners: function() { return /* binding */ removeListeners; },\n/* harmony export */   sendSocketMessage: function() { return /* binding */ sendSocketMessage; }\n/* harmony export */ });\n/* harmony import */ var socket_io_client__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! socket.io-client */ \"(app-pages-browser)/./node_modules/socket.io-client/build/esm/index.js\");\n/* provided dependency */ var process = __webpack_require__(/*! process */ \"(app-pages-browser)/./node_modules/next/dist/build/polyfills/process.js\");\n\nlet socket = null;\nlet messageCache = new Set(); // Cache to track message IDs and prevent duplicates\nconst initializeSocket = (userId)=>{\n    if (!socket) {\n        const SOCKET_URL = process.env.NEXT_PUBLIC_SOCKET_URL || \"http://localhost:8000\";\n        socket = (0,socket_io_client__WEBPACK_IMPORTED_MODULE_0__.io)(SOCKET_URL, {\n            auth: {\n                userId\n            },\n            transports: [\n                \"websocket\",\n                \"polling\"\n            ],\n            path: \"/socket.io\",\n            reconnectionAttempts: 5,\n            reconnectionDelay: 1000,\n            timeout: 20000\n        });\n        console.log(\"WebSocket initialized for user:\", userId);\n        socket.on(\"connect\", ()=>{\n            console.log(\"Connected to WebSocket server\");\n        });\n        socket.on(\"disconnect\", ()=>{\n            console.log(\"Disconnected from WebSocket server\");\n            // Clear the message cache on disconnect\n            messageCache.clear();\n        });\n        socket.on(\"connect_error\", (error)=>{\n            console.error(\"WebSocket connection error:\", error);\n        });\n        socket.on(\"error\", (error)=>{\n            console.error(\"WebSocket error:\", error);\n        });\n    }\n    return socket;\n};\nconst disconnectSocket = ()=>{\n    if (socket) {\n        socket.disconnect();\n        socket = null;\n        messageCache.clear(); // Clear message cache on disconnect\n        console.log(\"WebSocket disconnected\");\n    }\n};\nconst joinChatSession = (sessionId)=>{\n    if (socket) {\n        socket.emit(\"join\", {\n            sessionId\n        });\n        console.log(\"Joined chat session:\", sessionId);\n    }\n};\nconst leaveChatSession = (sessionId)=>{\n    if (socket) {\n        socket.emit(\"leave\", {\n            sessionId\n        });\n        console.log(\"Left chat session:\", sessionId);\n    }\n};\nconst sendSocketMessage = (message, sessionId, userId)=>{\n    if (socket) {\n        socket.emit(\"message\", {\n            text: message,\n            sessionId,\n            userId,\n            sender: \"user\",\n            timestamp: new Date().toISOString()\n        });\n    }\n};\nconst onMessageReceived = (callback)=>{\n    if (socket) {\n        socket.on(\"message\", (message)=>{\n            // Create a message fingerprint to detect duplicates\n            const msgFingerprint = \"\".concat(message.sender, \"-\").concat(message.text, \"-\").concat(message.sessionId);\n            // Only process messages we haven't seen before\n            if (!messageCache.has(msgFingerprint)) {\n                messageCache.add(msgFingerprint);\n                // Limit cache size to prevent memory issues\n                if (messageCache.size > 100) {\n                    messageCache = new Set([\n                        ...messageCache\n                    ].slice(-50));\n                }\n                callback(message);\n            } else {\n                console.log(\"Duplicate message detected and filtered out:\", msgFingerprint);\n            }\n        });\n    }\n};\nconst onTypingStatus = (callback)=>{\n    if (socket) {\n        socket.on(\"typing\", callback);\n    }\n};\nconst removeListeners = ()=>{\n    if (socket) {\n        socket.off(\"message\");\n        socket.off(\"typing\");\n    }\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QyxRQUFRO1FBQ1ZBLE9BQU9pQixFQUFFLENBQUMsVUFBVWlCO0lBQ3RCO0FBQ0YsRUFBRTtBQUVLLE1BQU1PLGtCQUFrQjtJQUM3QixJQUFJekMsUUFBUTtRQUNWQSxPQUFPMEMsR0FBRyxDQUFDO1FBQ1gxQyxPQUFPMEMsR0FBRyxDQUFDO0lBQ2I7QUFDRixFQUFFIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL2xpYi9zb2NrZXQudHM/ODU5ZSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBpbywgU29ja2V0IH0gZnJvbSAnc29ja2V0LmlvLWNsaWVudCc7XHJcbmltcG9ydCB7IFdlYlNvY2tldE1lc3NhZ2UsIENoYXRNZXNzYWdlIH0gZnJvbSAnQC90eXBlcyc7XHJcblxyXG5sZXQgc29ja2V0OiBTb2NrZXQgfCBudWxsID0gbnVsbDtcclxubGV0IG1lc3NhZ2VDYWNoZSA9IG5ldyBTZXQ8c3RyaW5nPigpOyAvLyBDYWNoZSB0byB0cmFjayBtZXNzYWdlIElEcyBhbmQgcHJldmVudCBkdXBsaWNhdGVzXHJcblxyXG5leHBvcnQgY29uc3QgaW5pdGlhbGl6ZVNvY2tldCA9ICh1c2VySWQ6IHN0cmluZykgPT4ge1xyXG4gIGlmICghc29ja2V0KSB7XHJcbiAgICBjb25zdCBTT0NLRVRfVVJMID0gcHJvY2Vzcy5lbnYuTkVYVF9QVUJMSUNfU09DS0VUX1VSTCB8fCAnaHR0cDovL2xvY2FsaG9zdDo4MDAwJztcclxuICAgIFxyXG4gICAgc29ja2V0ID0gaW8oU09DS0VUX1VSTCwge1xyXG4gICAgICBhdXRoOiB7XHJcbiAgICAgICAgdXNlcklkLFxyXG4gICAgICB9LFxyXG4gICAgICB0cmFuc3BvcnRzOiBbJ3dlYnNvY2tldCcsICdwb2xsaW5nJ10sXHJcbiAgICAgIHBhdGg6ICcvc29ja2V0LmlvJyxcclxuICAgICAgcmVjb25uZWN0aW9uQXR0ZW1wdHM6IDUsXHJcbiAgICAgIHJlY29ubmVjdGlvbkRlbGF5OiAxMDAwLFxyXG4gICAgICB0aW1lb3V0OiAyMDAwMCxcclxuICAgIH0pO1xyXG5cclxuICAgIGNvbnNvbGUubG9nKCdXZWJTb2NrZXQgaW5pdGlhbGl6ZWQgZm9yIHVzZXI6JywgdXNlcklkKTtcclxuICAgIFxyXG4gICAgc29ja2V0Lm9uKCdjb25uZWN0JywgKCkgPT4ge1xyXG4gICAgICBjb25zb2xlLmxvZygnQ29ubmVjdGVkIHRvIFdlYlNvY2tldCBzZXJ2ZXInKTtcclxuICAgIH0pO1xyXG4gICAgXHJcbiAgICBzb2NrZXQub24oJ2Rpc2Nvbm5lY3QnLCAoKSA9PiB7XHJcbiAgICAgIGNvbnNvbGUubG9nKCdEaXNjb25uZWN0ZWQgZnJvbSBXZWJTb2NrZXQgc2VydmVyJyk7XHJcbiAgICAgIC8vIENsZWFyIHRoZSBtZXNzYWdlIGNhY2hlIG9uIGRpc2Nvbm5lY3RcclxuICAgICAgbWVzc2FnZUNhY2hlLmNsZWFyKCk7XHJcbiAgICB9KTtcclxuICAgIFxyXG4gICAgc29ja2V0Lm9uKCdjb25uZWN0X2Vycm9yJywgKGVycm9yKSA9PiB7XHJcbiAgICAgIGNvbnNvbGUuZXJyb3IoJ1dlYlNvY2tldCBjb25uZWN0aW9uIGVycm9yOicsIGVycm9yKTtcclxuICAgIH0pO1xyXG4gICAgXHJcbiAgICBzb2NrZXQub24oJ2Vycm9yJywgKGVycm9yKSA9PiB7XHJcbiAgICAgIGNvbnNvbGUuZXJyb3IoJ1dlYlNvY2tldCBlcnJvcjonLCBlcnJvcik7XHJcbiAgICB9KTtcclxuICB9XHJcbiAgXHJcbiAgcmV0dXJuIHNvY2tldDtcclxufTtcclxuXHJcbmV4cG9ydCBjb25zdCBkaXNjb25uZWN0U29ja2V0ID0gKCkgPT4ge1xyXG4gIGlmIChzb2NrZXQpIHtcclxuICAgIHNvY2tldC5kaXNjb25uZWN0KCk7XHJcbiAgICBzb2NrZXQgPSBudWxsO1xyXG4gICAgbWVzc2FnZUNhY2hlLmNsZWFyKCk7IC8vIENsZWFyIG1lc3NhZ2UgY2FjaGUgb24gZGlzY29ubmVjdFxyXG4gICAgY29uc29sZS5sb2coJ1dlYlNvY2tldCBkaXNjb25uZWN0ZWQnKTtcclxuICB9XHJcbn07XHJcblxyXG5leHBvcnQgY29uc3Qgam9pbkNoYXRTZXNzaW9uID0gKHNlc3Npb25JZDogc3RyaW5nKSA9PiB7XHJcbiAgaWYgKHNvY2tldCkge1xyXG4gICAgc29ja2V0LmVtaXQoJ2pvaW4nLCB7IHNlc3Npb25JZCB9KTtcclxuICAgIGNvbnNvbGUubG9nKCdKb2luZWQgY2hhdCBzZXNzaW9uOicsIHNlc3Npb25JZCk7XHJcbiAgfVxyXG59O1xyXG5cclxuZXhwb3J0IGNvbnN0IGxlYXZlQ2hhdFNlc3Npb24gPSAoc2Vzc2lvbklkOiBzdHJpbmcpID0+IHtcclxuICBpZiAoc29ja2V0KSB7XHJcbiAgICBzb2NrZXQuZW1pdCgnbGVhdmUnLCB7IHNlc3Npb25JZCB9KTtcclxuICAgIGNvbnNvbGUubG9nKCdMZWZ0IGNoYXQgc2Vzc2lvbjonLCBzZXNzaW9uSWQpO1xyXG4gIH1cclxufTtcclxuXHJcbmV4cG9ydCBjb25zdCBzZW5kU29ja2V0TWVzc2FnZSA9IChtZXNzYWdlOiBzdHJpbmcsIHNlc3Npb25JZDogc3RyaW5nLCB1c2VySWQ6IHN0cmluZykgPT4ge1xyXG4gIGlmIChzb2NrZXQpIHtcclxuICAgIHNvY2tldC5lbWl0KCdtZXNzYWdlJywge1xyXG4gICAgICB0ZXh0OiBtZXNzYWdlLFxyXG4gICAgICBzZXNzaW9uSWQsXHJcbiAgICAgIHVzZXJJZCxcclxuICAgICAgc2VuZGVyOiAndXNlcicsXHJcbiAgICAgIHRpbWVzdGFtcDogbmV3IERhdGUoKS50b0lTT1N0cmluZygpLFxyXG4gICAgfSk7XHJcbiAgfVxyXG59O1xyXG5cclxuZXhwb3J0IGNvbnN0IG9uTWVzc2FnZVJlY2VpdmVkID0gKGNhbGxiYWNrOiAobWVzc2FnZTogQ2hhdE1lc3NhZ2UpID0+IHZvaWQpID0+IHtcclxuICBpZiAoc29ja2V0KSB7XHJcbiAgICBzb2NrZXQub24oJ21lc3NhZ2UnLCAobWVzc2FnZTogQ2hhdE1lc3NhZ2UpID0+IHtcclxuICAgICAgLy8gQ3JlYXRlIGEgbWVzc2FnZSBmaW5nZXJwcmludCB0byBkZXRlY3QgZHVwbGljYXRlc1xyXG4gICAgICBjb25zdCBtc2dGaW5nZXJwcmludCA9IGAke21lc3NhZ2Uuc2VuZGVyfS0ke21lc3NhZ2UudGV4dH0tJHttZXNzYWdlLnNlc3Npb25JZH1gO1xyXG4gICAgICBcclxuICAgICAgLy8gT25seSBwcm9jZXNzIG1lc3NhZ2VzIHdlIGhhdmVuJ3Qgc2VlbiBiZWZvcmVcclxuICAgICAgaWYgKCFtZXNzYWdlQ2FjaGUuaGFzKG1zZ0ZpbmdlcnByaW50KSkge1xyXG4gICAgICAgIG1lc3NhZ2VDYWNoZS5hZGQobXNnRmluZ2VycHJpbnQpO1xyXG4gICAgICAgIC8vIExpbWl0IGNhY2hlIHNpemUgdG8gcHJldmVudCBtZW1vcnkgaXNzdWVzXHJcbiAgICAgICAgaWYgKG1lc3NhZ2VDYWNoZS5zaXplID4gMTAwKSB7XHJcbiAgICAgICAgICBtZXNzYWdlQ2FjaGUgPSBuZXcgU2V0KFsuLi5tZXNzYWdlQ2FjaGVdLnNsaWNlKC01MCkpO1xyXG4gICAgICAgIH1cclxuICAgICAgICBjYWxsYmFjayhtZXNzYWdlKTtcclxuICAgICAgfSBlbHNlIHtcclxuICAgICAgICBjb25zb2xlLmxvZygnRHVwbGljYXRlIG1lc3NhZ2UgZGV0ZWN0ZWQgYW5kIGZpbHRlcmVkIG91dDonLCBtc2dGaW5nZXJwcmludCk7XHJcbiAgICAgIH1cclxuICAgIH0pO1xyXG4gIH1cclxufTtcclxuXHJcbmV4cG9ydCBjb25zdCBvblR5cGluZ1N0YXR1cyA9IChjYWxsYmFjazogKGlzVHlwaW5nOiBib29sZWFuKSA9PiB2b2lkKSA9PiB7XHJcbiAgaWYgKHNvY2tldCkge1xyXG4gICAgc29ja2V0Lm9uKCd0eXBpbmcnLCBjYWxsYmFjayk7XHJcbiAgfVxyXG59O1xyXG5cclxuZXhwb3J0IGNvbnN0IHJlbW92ZUxpc3RlbmVycyA9ICgpID0+IHtcclxuICBpZiAoc29ja2V0KSB7XHJcbiAgICBzb2NrZXQub2ZmKCdtZXNzYWdlJyk7XHJcbiAgICBzb2NrZXQub2ZmKCd0eXBpbmcnKTtcclxuICB9XHJcbn07ICJdLCJuYW1lcyI6WyJpbyIsInNvY2tldCIsIm1lc3NhZ2VDYWNoZSIsIlNldCIsImluaXRpYWxpemVTb2NrZXQiLCJ1c2VySWQiLCJTT0NLRVRfVVJMIiwicHJvY2VzcyIsImVudiIsIk5FWFRfUFVCTElDX1NPQ0tFVF9VUkwiLCJhdXRoIiwidHJhbnNwb3J0cyIsInBhdGgiLCJyZWNvbm5lY3Rpb25BdHRlbXB0cyIsInJlY29ubmVjdGlvbkRlbGF5IiwidGltZW91dCIsImNvbnNvbGUiLCJsb2ciLCJvbiIsImNsZWFyIiwiZXJyb3IiLCJkaXNjb25uZWN0U29ja2V0IiwiZGlzY29ubmVjdCIsImpvaW5DaGF0U2Vzc2lvbiIsInNlc3Npb25JZCIsImVtaXQiLCJsZWF2ZUNoYXRTZXNzaW9uIiwic2VuZFNvY2tldE1lc3NhZ2UiLCJtZXNzYWdlIiwidGV4dCIsInNlbmRlciIsInRpbWVzdGFtcCIsIkRhdGUiLCJ0b0lTT1N0cmluZyIsIm9uTWVzc2FnZVJlY2VpdmVkIiwiY2FsbGJhY2siLCJtc2dGaW5nZXJwcmludCIsImhhcyIsImFkZCIsInNpemUiLCJzbGljZSIsIm9uVHlwaW5nU3RhdHVzIiwicmVtb3ZlTGlzdGVuZXJzIiwib2ZmIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./lib/socket.ts\n"));

/***/ })

});